Комманды хаба

Хаб может принимать команды по USART, а так же возвращать данные. При этом данные, возвращаемые хабом перенаправляются в 2 разных USART. Это сделано для разделения вывода диагностической информации и собственно самих комманд и ответов на них. При этом диагоностическая информация дублируется выводом в USART команд и данных. Таким образом, на одну линию USART можно подключить любое командное устройство, например Raspberry Pi или обычный PC через USB-USART конвертер и отправлять или принимать комманды, а на вторую линию можно подключить PC через такой же конвертер и получать в терминале все, что выдает хаб.

Перечень команд и краткое описание.
Файл, в котором происходит обработка команд: at_processor.c

Комманда               Описание                             Ответ
  PING                 пинг хаба                            PONG
  FIND_NEW_DEVICE      поиск нового устройства              Информация об устройстве или ошибка поиска
  FIND                 алиас к предыдущей команде
  CHECK_TX_STATUS      проверяет статус передатчика
  CHECK_RX_STATUS      проверяет статус приемника
  HANDLE_TX_STATUS     проверяет статус передачтика и производит необходимые действия в зависимости от выставленных бит
  HANDLE_RX_STATUS     проверяет статус приемника и производит необходимые действия в зависимости от выставленных бит
  ADD_DEVICE           добавляет новое устройство (без отправки данных)
  LIST_DEVICES         выводит список устройств
  SAVE_DEVICES         сохраняет список устройств во флеш памяти
  LOAD_DEVICES         загружает ранее сохраненный список устройств
* PREPARE_TEST_DEVICES формирует список дустройств в памяти для тестирования - *** запрещена для использования, будет удалена! ***
  PING_ALL_DEVICES     отправляет пакет всем устройствам для обновления онлайн статуса
  SEND_DATA:ADDR:args  отправляет данные на заданное устройство. Где: ADDR - адрес устройства, 4 символа (hex); args - аргументы через "," запятую. Количество аргументов может быть не больше 21 (ограничение на длинну пакета с заголовком для модуля nRF24L01+). Каждый аргумент это байт в десятиричной СС.
  
